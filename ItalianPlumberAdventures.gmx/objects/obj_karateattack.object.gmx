<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_karate_melee</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's karate time!

//Make Mario invisible and disable his controls
with obj_mario
{
    visible = 0
    disablecontrols = 1
}

//Bump blocks in front
bumper =  instance_create(x,y,obj_blockbumper)
bumper.alarm[0] = 0
bumper.mask_index = spr_bigmask

//Do not animate
image_speed = 0

//Attack variable
attack = 1

//Current combo
combo = 0

//Attack delay
delay = 0

//Airdash
airdash = 0

//Begin attack
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End karate attack

//With Mario
with obj_mario
{

    //Become visible
    visible = 1

    //Enable controls
    disablecontrols = 0

}

//Destroy bumper
with bumper instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop airdash
airdash = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset delay
delay = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///No combo in time? Destroy!
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ready for another?
image_index = 0
alarm[4] = 12

//Nudge Mario backwards
with obj_mario hspeed = -direct
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select attack
if combo = 0
{
    combo = 1
    image_index = 1
    alarm[0] = 4
}
else
{
    combo = 0
    image_index = 3
    alarm[0] = 4
}

//Attacking
attack = 2

//Thrust Mario forwards
with obj_mario
{
    if (direct = 1 and keyboard_check(vk_right))
    or (direct = -1 and keyboard_check(vk_left))
        hspeed = 3*direct
    else
        hspeed = 2*direct
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decrement image index
image_index--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment image index
image_index++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Snap to Mario if he exists and is in the right suit
if instance_exists(obj_mario)
and global.powerup = cs_karate
{
    x = obj_mario.x
    if airdash = 1
    and obj_mario.hspeed != 0
    {
        obj_mario.y = y
        obj_mario.vspeed = 0
    }
    else
        y = obj_mario.y
    bumper.x = x+8*obj_mario.direct
    bumper.y = y
}

//Otherwise, destroy
else
    instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if attack is finished
if attack = 2
and instance_exists(obj_mario)
and obj_mario.hspeed = 0
{

    //Delay over
    if delay = 0
    {

        //Destroy for air combo
        if combo = 2
            instance_destroy()

        //End combo otherwise
        else
        {
            attack = 0
            alarm[1] = 4
            alarm[3] = 8
        }

    }

    //If the delay is not over, and a solid is in the way, or an unkillable enemy is in the way
    else if (obj_mario.direct = 1 and collision_rectangle(obj_mario.bbox_right,obj_mario.bbox_top+4,obj_mario.bbox_right+1,obj_mario.bbox_bottom-1,obj_solid,1,0))
    or (obj_mario.direct = -1 and collision_rectangle(obj_mario.bbox_left,obj_mario.bbox_top+4,obj_mario.bbox_left-1,obj_mario.bbox_bottom-1,obj_solid,1,0))
    {

        //Recoil
        with obj_mario hspeed = -direct*2

        //Cancel airdash
        airdash = 0

        //Animate
        if combo != 2
            image_index = 0

        //Destroy later
        alarm[4] = 20

        //Stop certain alarms
        alarm[0] = 0
        alarm[5] = 0

    }

}

//Step back when an unkillable enemy is in the way
with obj_mario
{
    var enemycheck = collision_rectangle(x,bbox_top+4,x+direct*12,bbox_bottom-1,obj_enemyparent,0,0)
    if enemycheck
    and enemycheck.hardness = 99
        hspeed = -direct
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin attack

//Punch sound
audio_play_sound(snd_stomp2,0,0)

//Mario grunt sound
audio_play_sound(choose(snd_hah,snd_ya,snd_yah),0,0)

//Ground attack
if instance_exists(obj_mario)
and obj_mario.state &lt; 2
and not keyboard_check(vk_up)
{
    image_index = 0
    attack = 1
    alarm[2] = 4
}

//Air attack
else
{
    attack = 2
    combo = 2
    image_index = 5

    //Thrust Mario
    with obj_mario
    {

        //Forwards
        hspeed = 3*direct

        //Upwards
        if keyboard_check(vk_up)
        {
            vspeed = -4
            y--
        }

        //Downwards
        else if keyboard_check(vk_down)
            vspeed = 4

        //Airdash
        else
        {
            vspeed = 0
            other.airdash = 1

            //Forward thrust airdash
            if (direct = 1 and keyboard_check(vk_right))
            or (direct = -1 and keyboard_check(vk_left))
                other.alarm[6] = 25

            //Normal airdash
            else
                other.alarm[6] = 10

        }

    }

}

//Delay
delay = 1

//Reset delay
alarm[5] = 30

//Stop certain alarms
alarm[1] = 0
alarm[3] = 0
alarm[4] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws Mario
if instance_exists(obj_mario)
{

    //Make Mario flash
    if obj_mario.isflashing = 1
        shader_set(sha_invert)

    //Draw Mario
    draw_sprite_ext(sprite_index,image_index,round(x),y,obj_mario.direct,1,0,c_white,obj_mario.image_alpha)

    //Reset flashing
    if obj_mario.isflashing = 1
        shader_reset()

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Continue combo
if attack = 0
{

    //Check for direction change
    with obj_mario
    {
        if direct = 1
        and keyboard_check(vk_left)
            direct = -1
        else if direct = -1
        and keyboard_check(vk_right)
            direct = 1

    }

    //Begin attack
    event_user(0)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
