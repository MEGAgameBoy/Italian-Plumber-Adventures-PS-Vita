<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pause</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The title screen

//The selected menu item
menu_choice = 0

//The transparency for the powered by text
fade = 1

//Start fading out the powered by text after 2 seconds
//alarm[0] = 120

//Play music
alarm[1] = 2

//Clear all data structures
ds_map_clear(global.worldmap)
ds_map_clear(global.cardgame)

//Menu text
menu[0] = "Play"
menu[1] = "Configure gamepad"
menu[2] = "- Press PS to quit -"

//Variable to configure gamepad
checking_gamepad = 0
gamepad_step = 0

//Load file SaveA.sav
if file_exists(global.file) 
{
    scr_load(global.file)
}
else
{
 checking_gamepad = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Continue with gamepad configuration
if (gamepad_step == -99)
    gamepad_step = 0
else
    gamepad_step *= -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play music
audio_play_sound(snd_titlemusic,99,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade out the powered by text
if fade != 0
{
    fade -= 0.01
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Detecting gamepad
var ok = 0
if (checking_gamepad){
    if (global.gamepadindex == 0 &amp;&amp; gamepad_step == 0){
        //On first place, we must detect the gamepad ID
        for(var gp=0;gp &lt; 30;gp++){
            for ( var key = gp_face1; key &lt; gp_axisrv; key++ ) {
                if ( gamepad_button_check_released( gp, key ) ){
                    ok = 1
                    break
                }
            }
            if (ok) break
        }
        if (ok){
            global.gamepadindex = gp
            gamepad_step=-1
            alarm[10] = 1*room_speed;
        }
    }else{
        for ( var key = gp_face1; key &lt; gp_axisrv; key++ ) {
            if ( gamepad_button_check_released( global.gamepadindex, key ) ){
                switch(gamepad_step){
                    case 1:
                        global.gamepadjump = key
                        gamepad_step = -2
                        alarm[10] = 1*room_speed;
                        break
                    case 2:
                        global.gamepadrun = key
                        gamepad_step = -3
                        alarm[10] = 1*room_speed;
                        break
                    case 3:
                        global.gamepadselect = key
                        gamepad_step = -4
                        alarm[10] = 1*room_speed;
                        break
                    case 4:
                        global.gamepadstart = key
                        checking_gamepad = 0
                        gamepad_step = 0
                        break
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the title screen

//Draw the box
draw_sprite_ext(spr_pause,1,x,y,1,1,0,c_white,0.7)

//Set the font
draw_set_font(global.font)

//If the powered by text is not faded out
if fade != 0
{

    //Set the alpha
    draw_set_alpha(fade)

    /*
    **  Powered by Hello Mario Engine text
    **
    **  This engine's license requires attribution!
    **  If you remove this line, give credit for
    **  use of the "Hello Mario Engine" somewhere
    **  else. Thank you. -Hello Fangaming
    */
    //draw_text(2,2,"POWERED BY HELLO MARIO ENGINE V6.2.1")

}

//Center the text
draw_set_halign(fa_center)

//Set the aplha
draw_set_alpha(0.7)

//Iterate over the menu items
if (!checking_gamepad){
    for(var i = 0; i &lt; 3; i++)
    {
    
        //Make the text gold if it is the selected one
        if menu_choice = i
            menu[i] = string_lower(menu[i])
    
        //Otherwise, make the text white
        else
            menu[i] = string_upper(menu[i])
    
        //Draw the text
        draw_text(x,y-20+i*16,menu[i])
    
    }
}else{
    if gamepad_step == 0{
        draw_text(x,y-20,"Press any key to get#gamepad ID")
    }else if gamepad_step == 1{
        draw_text(x,y-20,"Press key to jump")
    }else if gamepad_step == 2{
        draw_text(x,y-20,"Press key tu run")
    }else if gamepad_step == 3{
        draw_text(x,y-20,"Press select key")
    }else if gamepad_step == 4{
        draw_text(x,y-20,"Press start key")
    }else{
        draw_text(x,y-20,"(wait...)")
    }
}

//Reset text alignment
draw_set_halign(fa_left)

//Reset alpha
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a lower menu item
if !checking_gamepad &amp;&amp; menu_choice &lt; 1
{
    menu_choice++
    audio_play_sound(snd_move,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select a higher menu item
if !checking_gamepad &amp;&amp; menu_choice &gt; 0
{
    menu_choice--
    audio_play_sound(snd_move,0,0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load the selected file
if !checking_gamepad {
    //Play the enter level sound
    audio_play_sound(snd_enterstage,0,0)
    
    //Play Mario's voice
    audio_play_sound(snd_letsgo,0,0)
    
    //Stop the music
    audio_stop_sound(snd_titlemusic)
    
    //Figure out what option is selected
    if menu_choice = 0 {
        scr_return()
    }else if menu_choice = 1 {
        global.gamepadindex = 0
        checking_gamepad = 1
        gamepad_step = -99
        alarm[10] = 1 * room_speed
    }else{
        with obj_persistent event_user(4)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>82,32</point>
    <point>82,82</point>
  </PhysicsShapePoints>
</object>
